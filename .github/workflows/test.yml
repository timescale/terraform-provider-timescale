# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  push:
    paths-ignore:
      - 'README.md'

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4 # v3.3.0
      - uses: actions/setup-go@v5 # v4.0.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: go build -v .

  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4 # v3.3.0
      - uses: actions/setup-go@v5 # v4.0.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go generate ./...
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions
  test:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          # - '1.0.*'
          # - '1.1.*'
          - '1.2.*'
    steps:
      - uses: actions/checkout@v4 # v3.3.0
      - uses: actions/setup-go@v5 # v4.0.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1 # v2.0.3
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - env:
          TF_ACC: "1"
          TF_VAR_ts_access_key: ${{ secrets.TF_VAR_TS_ACCESS_KEY }}
          TF_VAR_ts_secret_key: ${{ secrets.TF_VAR_TS_SECRET_KEY }}
          TF_VAR_ts_project_id: ${{ secrets.TF_VAR_TS_PROJECT_ID }}
          TF_VAR_ts_aws_acc_id: ${{ secrets.TF_VAR_TS_AWS_ACC_ID }}
          # point to API
          TIMESCALE_DEV_URL: ${{ secrets.TIMESCALE_DEV_URL }}
        run: go test -v -cover ./internal/provider/
        timeout-minutes: 10
