# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    paths-ignore:
      - 'README.md'
  push:
    paths-ignore:
      - 'README.md'

# Don't run multiple acceptance tests actions simultaneously to avoid conflicts (f.e. VPCs).
concurrency:
  group: ${{ github.workflow }}

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: go build -v .
      - name: Run linters
        uses: golangci/golangci-lint-action@1481404843c368bc19ca9406f87d6e0fc97bdcfd # v7.0.0
        with:
          version: latest

  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version-file: 'go.mod'
          cache: true
      # We need the latest version of Terraform for our documentation generation to use
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_wrapper: false
      - run: make generate
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'make generate' command and commit."; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions
  test:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '1.*.*'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      # Sweepers
      - env:
          TF_ACC: "1"
          TF_VAR_ts_access_key: ${{ secrets.TF_VAR_TS_ACCESS_KEY }}
          TF_VAR_ts_secret_key: ${{ secrets.TF_VAR_TS_SECRET_KEY }}
          TF_VAR_ts_project_id: ${{ secrets.TF_VAR_TS_PROJECT_ID }}
          TIMESCALE_DEV_URL: ${{ secrets.TIMESCALE_DEV_URL }}
          PEER_ACCOUNT_ID: ${{ secrets.PEER_ACCOUNT_ID }}
          PEER_VPC_ID: ${{ secrets.PEER_VPC_ID }}
          PEER_REGION: ${{ secrets.PEER_REGION }}
        run: go test ./internal/provider/ -v -sweep=all
        timeout-minutes: 30
      - env:
          TF_ACC: "1"
          TF_VAR_ts_access_key: ${{ secrets.TF_VAR_TS_ACCESS_KEY }}
          TF_VAR_ts_secret_key: ${{ secrets.TF_VAR_TS_SECRET_KEY }}
          TF_VAR_ts_project_id: ${{ secrets.TF_VAR_TS_PROJECT_ID }}
          TIMESCALE_DEV_URL: ${{ secrets.TIMESCALE_DEV_URL }}
          PEER_ACCOUNT_ID: ${{ secrets.PEER_ACCOUNT_ID }}
          PEER_VPC_ID: ${{ secrets.PEER_VPC_ID }}
          PEER_REGION: ${{ secrets.PEER_REGION }}
        run: go test ./internal/provider/ -v -cover
        timeout-minutes: 10
        